---
export interface Props {
  title: string;
  subtitle?: string;
  description: string;
  chapterNumber?: number;
  primaryColor?: string;
  secondaryColor?: string;
  showNavigation?: boolean;
  prevLink?: string;
  nextLink?: string;
  prevText?: string;
  nextText?: string;
}

const { 
  title,
  subtitle,
  description,
  chapterNumber,
  primaryColor = "green",
  secondaryColor = "green",
  showNavigation = true,
  prevLink,
  nextLink,
  prevText = "← Prethodno",
  nextText = "Sljedeće →"
} = Astro.props;

const colorClasses = {
  green: {
    bg: "from-green-600 to-green-800",
    text: "text-green-200",
    button: "text-green-700",
    hover: "hover:text-green-700"
  },
  blue: {
    bg: "from-blue-600 to-blue-800", 
    text: "text-blue-200",
    button: "text-blue-700",
    hover: "hover:text-blue-700"
  },
  purple: {
    bg: "from-purple-600 to-purple-800",
    text: "text-purple-200", 
    button: "text-purple-700",
    hover: "hover:text-purple-700"
  },
  red: {
    bg: "from-red-600 to-red-800",
    text: "text-red-200",
    button: "text-red-700", 
    hover: "hover:text-red-700"
  },
  orange: {
    bg: "from-orange-600 to-orange-800",
    text: "text-orange-200",
    button: "text-orange-700",
    hover: "hover:text-orange-700"
  },
  teal: {
    bg: "from-teal-600 to-teal-800",
    text: "text-teal-200",
    button: "text-teal-700",
    hover: "hover:text-teal-700"
  },
  indigo: {
    bg: "from-indigo-600 to-indigo-800",
    text: "text-indigo-200",
    button: "text-indigo-700",
    hover: "hover:text-indigo-700"
  },
  pink: {
    bg: "from-pink-600 to-pink-800",
    text: "text-pink-200",
    button: "text-pink-700",
    hover: "hover:text-pink-700"
  }
};

const colors = colorClasses[primaryColor as keyof typeof colorClasses] || colorClasses.green;
---

<section class={`relative py-16 bg-gradient-to-br ${colors.bg} text-white overflow-hidden`}>
  <!-- Pozadinski uzorak -->
  <div class="absolute inset-0 opacity-10">
    <div class="absolute inset-0" style="background-image: radial-gradient(circle at 2px 2px, rgba(255,255,255,0.1) 1px, transparent 0); background-size: 20px 20px;"></div>
  </div>

  <div class="relative max-w-6xl mx-auto px-4 sm:px-6">
    <div class="text-center">
      {subtitle && (
        <p class={`${colors.text} font-bold uppercase tracking-wide mb-4 text-sm`}>
          {subtitle}
        </p>
      )}
      
      <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold mb-6 leading-tight tracking-tight font-heading">
        {title}
      </h1>
      
      <p class={`text-xl ${colors.text} mb-8 leading-relaxed max-w-3xl mx-auto font-body`}>
        {description}
      </p>
      
      {showNavigation && (
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          {prevLink && (
            <a
              href={prevLink}
              class={`inline-flex items-center justify-center px-6 py-3 bg-white ${colors.button} font-bold rounded-full shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300`}
            >
              {prevText}
            </a>
          )}
          {nextLink && (
            <a
              href={nextLink}
              class={`inline-flex items-center justify-center px-6 py-3 border-2 border-white text-white font-bold rounded-full ${colors.hover} hover:bg-white transition-all duration-300`}
            >
              {nextText}
            </a>
          )}
        </div>
      )}
    </div>
  </div>
</section>
