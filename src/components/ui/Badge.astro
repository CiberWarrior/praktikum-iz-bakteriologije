---
export interface Props {
  variant?: 'default' | 'outline' | 'gradient';
  color?: 'blue' | 'green' | 'red' | 'purple' | 'yellow' | 'indigo' | 'gray';
  size?: 'sm' | 'md' | 'lg';
  className?: string;
}

const { 
  variant = 'default',
  color = 'blue',
  size = 'md',
  className = ''
} = Astro.props;

const colorClasses = {
  blue: {
    bg: 'bg-blue-100',
    text: 'text-blue-800',
    border: 'border-blue-200',
    gradient: 'from-blue-500 to-blue-600'
  },
  green: {
    bg: 'bg-green-100',
    text: 'text-green-800',
    border: 'border-green-200',
    gradient: 'from-green-500 to-green-600'
  },
  red: {
    bg: 'bg-red-100',
    text: 'text-red-800',
    border: 'border-red-200',
    gradient: 'from-red-500 to-red-600'
  },
  purple: {
    bg: 'bg-purple-100',
    text: 'text-purple-800',
    border: 'border-purple-200',
    gradient: 'from-purple-500 to-purple-600'
  },
  yellow: {
    bg: 'bg-yellow-100',
    text: 'text-yellow-800',
    border: 'border-yellow-200',
    gradient: 'from-yellow-500 to-yellow-600'
  },
  indigo: {
    bg: 'bg-indigo-100',
    text: 'text-indigo-800',
    border: 'border-indigo-200',
    gradient: 'from-indigo-500 to-indigo-600'
  },
  gray: {
    bg: 'bg-gray-100',
    text: 'text-gray-800',
    border: 'border-gray-200',
    gradient: 'from-gray-500 to-gray-600'
  }
};

const sizeClasses = {
  sm: 'px-2 py-1 text-xs',
  md: 'px-3 py-1.5 text-sm',
  lg: 'px-4 py-2 text-base'
};

const variantClasses = {
  default: `${colorClasses[color].bg} ${colorClasses[color].text} border ${colorClasses[color].border}`,
  outline: `bg-transparent ${colorClasses[color].text} border ${colorClasses[color].border}`,
  gradient: `bg-gradient-to-r ${colorClasses[color].gradient} text-white border-transparent`
};
---

<span class={`${variantClasses[variant]} ${sizeClasses[size]} rounded-full font-medium inline-flex items-center ${className}`}>
  <slot />
</span>
