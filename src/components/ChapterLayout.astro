---
import BaseLayout from '../layouts/BaseLayout.astro';
import CallToAction from './CallToAction.astro';
import PlainTextPrintButton from './PlainTextPrintButton.astro';

const path = Astro.url.pathname.replace(/\/$/, ""); // bez završne '/'

const EXCLUDE = new Set([
  "", "/", "/index", "/predgovor", "/rjecnik", "/rječnik",
  "/o-nama", "/provjeri-znanje", "/pretraga", "/sadrzaj", "/sadržaj"
]);

// Pravilo za poglavlja 1–23, npr. /poglavlje-1/..., /poglavlje-23/... (NE na naslovnicama)
const isChapter = /^\/poglavlje-(?:[1-9]|1[0-9]|2[0-3])\/.+/.test(path);
const shouldShowPrint = isChapter && !EXCLUDE.has(path);

export interface Props {
  title: string;
  description: string;
  chapterNumber?: number;
  primaryColor?: string;
  secondaryColor?: string;
  prevLink?: string;
  nextLink?: string;
  prevText?: string;
  nextText?: string;
  ctaTitle?: string;
  ctaDescription?: string;
  ctaPrimaryText?: string;
  ctaPrimaryLink?: string;
  ctaSecondaryText?: string;
  ctaSecondaryLink?: string;
  showBreadcrumb?: boolean;
  breadcrumbPath?: Array<{ name: string; url: string }>;
  ctaCustomBgColor?: string;
  showZapocniUcenje?: boolean;
}

const { 
  title,
  description,
  chapterNumber,
  primaryColor = 'green',
  secondaryColor = 'emerald',
  prevLink,
  nextLink,
  prevText = "← Prethodno poglavlje",
  nextText = "Sljedeće poglavlje →",
  ctaTitle = "Nastavi na sljedeće poglavlje",
  ctaDescription = "Nastavite s učenjem i proširite svoje znanje o bakteriologiji.",
  ctaPrimaryText = "Sljedeće poglavlje",
  ctaPrimaryLink = "/sadrzaj/",
  ctaSecondaryText = "Povratak na sadržaj",
  ctaSecondaryLink = "/sadrzaj/",
  showBreadcrumb = false,
  breadcrumbPath = [],
  ctaCustomBgColor,
  showZapocniUcenje = false
} = Astro.props;

// Koristi props direktno
const finalConfig: {
  title: string;
  description: string;
  primaryColor: string;
  secondaryColor: string;
  prevLink: string | undefined;
  nextLink: string | undefined;
  prevText: string;
  nextText: string;
  ctaTitle: string;
  ctaDescription: string;
  ctaPrimaryText: string;
  ctaPrimaryLink: string;
  ctaSecondaryText: string;
  ctaSecondaryLink: string;
  showBreadcrumb: boolean;
  breadcrumbPath: Array<{ name: string; url: string }>;
  ctaCustomBgColor: string | undefined;
  showZapocniUcenje: boolean;
} = {
  title: title || "Stranica",
  description: description || "Opis stranice",
  primaryColor: primaryColor || "green",
  secondaryColor: secondaryColor || "emerald",
  prevLink,
  nextLink,
  prevText: prevText || "← Prethodno poglavlje",
  nextText: nextText || "Sljedeće poglavlje →",
  ctaTitle: ctaTitle || "Nastavi na sljedeće poglavlje",
  ctaDescription: ctaDescription || "Nastavite s učenjem i proširite svoje znanje o bakteriologiji.",
  ctaPrimaryText: ctaPrimaryText || "Sljedeće poglavlje",
  ctaPrimaryLink: ctaPrimaryLink || "/sadrzaj/",
  ctaSecondaryText: ctaSecondaryText || "Povratak na sadržaj",
  ctaSecondaryLink: ctaSecondaryLink || "/sadrzaj/",
  showBreadcrumb,
  breadcrumbPath,
  ctaCustomBgColor,
  showZapocniUcenje
};
---

<BaseLayout title={finalConfig.title} description={finalConfig.description}>
  <!-- Breadcrumb -->
  {finalConfig.showBreadcrumb && finalConfig.breadcrumbPath.length > 0 && (
    <div class="bg-gray-50 border-b border-gray-200">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 py-2">
        <nav class="flex items-center justify-between" aria-label="Breadcrumb">
          <ol class="flex items-center space-x-2">
            <li>
              <a href="/" class="text-gray-500 hover:text-gray-700 transition-colors duration-300">
                Početna
              </a>
            </li>
            {finalConfig.breadcrumbPath.map((item, index) => (
              <li class="flex items-center">
                <span class="text-gray-400 mx-2">/</span>
                {index === finalConfig.breadcrumbPath.length - 1 ? (
                  <span class="text-gray-900 font-medium">{item.name}</span>
                ) : (
                  <a href={item.url} class="text-gray-500 hover:text-gray-700 transition-colors duration-300">
                    {item.name}
                  </a>
                )}
              </li>
            ))}
          </ol>
          <!-- THX gumb -->
          {shouldShowPrint && (
            <div class="flex items-center gap-2">
              <PlainTextPrintButton />
            </div>
          )}
        </nav>
      </div>
    </div>
  )}

  <!-- Hero Section -->
  <section class="relative py-20 bg-gradient-to-br from-green-600 to-green-800 text-white overflow-hidden">
    <!-- Pozadinski uzorak -->
    <div class="absolute inset-0 opacity-10">
      <div class="absolute inset-0" style="background-image: radial-gradient(circle at 2px 2px, rgba(255,255,255,0.1) 1px, transparent 0); background-size: 20px 20px;"></div>
    </div>

    <div class="relative max-w-7xl mx-auto px-4 sm:px-6">
      <div class="text-center">
        <p class="text-green-200 font-bold uppercase tracking-wide mb-5 text-sm">
          {chapterNumber ? `Poglavlje ${chapterNumber}` : 'Bakteriološki praktikum'}
        </p>
        
        <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold mb-6 leading-tight">
          {finalConfig.title}
        </h1>
        
        <p class="text-xl text-green-200 mb-8 leading-relaxed max-w-3xl mx-auto">
          {finalConfig.description}
        </p>
        
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          {finalConfig.prevLink && (
            <a
              href={finalConfig.prevLink}
              class="inline-flex items-center justify-center px-6 py-3 bg-white text-green-700 font-bold rounded-full shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300"
            >
              {finalConfig.prevText}
            </a>
          )}
          {finalConfig.nextLink && (
            <a
              href={finalConfig.nextLink}
              class="inline-flex items-center justify-center px-6 py-3 border-2 border-white text-white font-bold rounded-full hover:bg-white hover:text-green-700 transition-all duration-300"
            >
              {finalConfig.nextText}
            </a>
          )}
        </div>
        
        <!-- THX gumb - prikazuje se samo kada nema breadcrumb-a -->
        {!finalConfig.showBreadcrumb && shouldShowPrint && (
          <div class="mt-8 flex justify-center">
            <PlainTextPrintButton />
          </div>
        )}
      </div>
    </div>
  </section>

  <!-- Main Content -->
  <main class="flex-1 bg-white">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 py-12">
      <article id="content" class="prose prose-lg max-w-none">
        <slot />
      </article>
    </div>
  </main>

  {finalConfig.showZapocniUcenje && (
    <!-- Započni učenje Section -->
    <section class="bg-gradient-to-br from-red-600 via-red-700 to-red-800 text-white py-20 mt-20 relative overflow-hidden" style="background: linear-gradient(135deg, #d12423 0%, #b91c1c 50%, #991b1b 100%);">
      <!-- Pozadinski uzorak -->
      <div class="absolute inset-0 opacity-10">
        <div class="absolute inset-0" style="background-image: radial-gradient(circle at 2px 2px, rgba(255,255,255,0.1) 1px, transparent 0); background-size: 20px 20px;"></div>
      </div>
      
      <!-- Dekorativni elementi -->
      <div class="absolute top-10 left-10 w-32 h-32 bg-white opacity-5 rounded-full blur-xl"></div>
      <div class="absolute bottom-10 right-10 w-48 h-48 bg-white opacity-5 rounded-full blur-2xl"></div>
      
      <div class="relative max-w-4xl mx-auto px-4 sm:px-6 text-center">
        <h2 class="text-4xl md:text-5xl font-bold mb-6 leading-tight">
          Započni učenje?
        </h2>
        
        <p class="text-xl md:text-2xl text-red-200 mb-12 leading-relaxed max-w-3xl mx-auto">
          Započni svoj put u bakteriologiji danas. Svako poglavlje je samostalna cjelina
          s teorijom, praktičnim vježbama i provjerom znanja.
        </p>
        
        <div class="flex flex-col sm:flex-row gap-6 justify-center items-center">
          <a
            href="/sadrzaj/"
            class="inline-flex items-center justify-center px-8 py-4 bg-white text-red-700 font-bold rounded-full shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 hover:scale-105 no-underline text-lg"
          >
            <span>Sadržaj</span>
            <svg class="w-6 h-6 ml-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
            </svg>
          </a>
          
          <a
            href="/"
            class="inline-flex items-center justify-center px-8 py-4 bg-transparent border-2 border-white text-white font-semibold rounded-full hover:bg-white hover:text-red-700 transition-all duration-300 transform hover:-translate-y-1 no-underline text-lg"
          >
            Povratak na početnu
          </a>
        </div>
      </div>
    </section>
  )}

  <!-- Call to Action -->
  <CallToAction 
    title={finalConfig.ctaTitle}
    description={finalConfig.ctaDescription}
    primaryText={finalConfig.ctaPrimaryText}
    primaryLink={finalConfig.ctaPrimaryLink}
    secondaryText={finalConfig.ctaSecondaryText}
    secondaryLink={finalConfig.ctaSecondaryLink}
    primaryColor={finalConfig.primaryColor}
    customBgColor={finalConfig.ctaCustomBgColor}
  />



  <!-- Scroll Animacije i Print/PDF JavaScript -->
  <script>
    // Intersection Observer za scroll animacije
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate');
        }
      });
    }, observerOptions);


    // Dodaj animacije na elemente
    document.addEventListener('DOMContentLoaded', () => {
      // Hero sekcija
      const heroText = document.querySelector('.hero-text');
      if (heroText) heroText.classList.add('scroll-fade-left');
      
      // Hero buttons
      const heroButtons = document.querySelector('.hero-buttons');
      if (heroButtons) heroButtons.classList.add('scroll-fade-right');
      
    });
  </script>
</BaseLayout>
