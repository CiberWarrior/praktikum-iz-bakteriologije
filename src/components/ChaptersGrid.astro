---
interface ChapterItem {
  text: string;
  link: string;
  variant?: 'primary';
  heading?: string; // Opcionalni naslov iznad teksta
}

interface Props {
  items?: ChapterItem[];
  title?: string; // Opcionalni naslov sekcije
}

const { items = [], title } = Astro.props as Props;

// Sigurno rukovanje s items
const safeItems = Array.isArray(items) ? items : [];
---

<section class="chapters">
  {title && <h2 class="chapters__title">{title}</h2>}
  
  <div class="chapters__grid" role="list">
    {safeItems.map((item) => (
      <a
        role="listitem"
        href={item.link}
        class={`chapters__item ${item.variant === 'primary' ? 'is-primary' : ''}`}
        aria-label={item.text}
      >
        <div>
          {item.heading && <div class="chapters__heading">{item.heading}</div>}
          <span class="chapters__text">{item.text}</span>
        </div>
        <svg class="chapters__icon" viewBox="0 0 24 24" aria-hidden="true">
          <path d="M13 5l7 7-7 7M5 12h14" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </a>
    ))}
  </div>
  
  {safeItems.length === 0 && (
    <p class="chapters__empty">Nema dostupnih poglavlja.</p>
  )}
</section>

<style>
  /* Dodatni stilovi specifiƒçni za ovu komponentu */
  .chapters__title {
    font-size: 1.5rem;
    font-weight: 600;
    color: #138d75;
    margin-bottom: 1.5rem;
    text-align: center;
  }
  
  .chapters__empty {
    text-align: center;
    color: #666;
    font-style: italic;
    padding: 2rem;
  }
</style>
